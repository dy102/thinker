# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push: 
    branches: [ "master" ] #push할 branch의 이름
  pull_request:
    branches: [ "master" ] #pull request할 branch의 이름

permissions:
  contents: read #권한 설정

jobs: 
  build:
    runs-on: ubuntu-latest #빌드할 환경

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17 # 사용할 JDK 버전
      uses: actions/setup-java@v3
      with:
        java-version: '17' # 사용할 Java언어 버전
        distribution: 'temurin'

    - name: Set yml file 
      env:
          DEV_APPLICATION_YML: ${{ secrets.DB_APPLICATION_YML }}
          DEV_APPLICATION_YML_DIR: server/src/main/resources
          DEV_APPLICATION_YML_FILE_NAME: application.yml
      run: |
        echo $DEV_APPLICATION_YML | base64 --decode > $DEV_APPLICATION_YML_DIR/$DEV_APPLICATION_YML_FILE_NAME
        chmod +x server/gradlew

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2.9.0
      with:
        arguments: clean build -x test
        build-root-directory: ./server

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: testServer
        path: server/build/libs/thinker-0.0.1-SNAPSHOT.jar # 빌드 후 생성된 jar 파일

  deploy:
    needs: build # 배포를 위해 필요한 과정
    runs-on: ubuntu-latest # 배포시 사용 환경

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: testServer
        path: ./ # 배포에 활용할 경로

    - name: SCP to server
      uses: appleboy/scp-action@master
      with:
        username: ${{ secrets.SSH_USER }}
        host: ${{ secrets.SERVER_IP }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "./thinker-0.0.1-SNAPSHOT.jar"
        target: "/home/ec2-user/server"

    - name: Deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          pgrep java | xargs kill -9
          nohup java -jar /home/${{ secrets.SSH_USER }}/server/app.jar > app.log 2>&1 &
